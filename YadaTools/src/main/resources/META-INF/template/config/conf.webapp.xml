<config>
	<info>
		<env>$env</env>
		<appName>$projectName</appName>
		<version>0.1 alpha EXAMPLE</version>
		<build>${"\$"}{build}</build> <!-- TODO iniettare tramite gradle -->
		<date>@@RELEASEDATE_PLACEHOLDER@@</date> <!-- Injected by gradle -->
	</info>
	<paths>
		<serverAddress>http://$env.EXAMPLE.com/</serverAddress>
		<basePath>$basePath/$acronym$env</basePath>
	</paths>
	<email>
		<enabled>true</enabled>
		<from>noreply@EXAMPLE.com</from>
		<support>
			<!-- Addresses to which a support request is sent -->
			<to>admin@EXAMPLE.com</to>
		</support>
		<logoImage>template.email/logo50.png</logoImage>
		<smtpserver>
			<host>smtp.EXAMPLE.com</host>
			<port>587</port>
			<protocol>smtp</protocol>
			<username>EXAMPLE@EXAMPLE.com</username>
			<password>EXAMPLE</password>
			<!--  If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.  -->
			<properties>mail.smtp.sendpartial=true</properties> 
			<properties>mail.smtp.auth=true</properties>
			<properties>mail.smtp.starttls.enable=true</properties>
			<properties>mail.smtp.quitwait=false</properties>
		</smtpserver>
		<!-- Remove this list to enable email to everyone -->
		<validEmail>EXAMPLE@EXAMPLE.com</validEmail>
		<validEmail>EXAMPLE2@EXAMPLE.com</validEmail>
		<validEmail>EXAMPLE3@EXAMPLE.net</validEmail>
	</email>

	<database>
		<jndiname>java:comp/env/jdbc/${acronym}db$env</jndiname>
		<showSql>false</showSql>
		<entityPackage>${basePackage}.persistence.entity</entityPackage>
	</database>

	<social>
		<facebook>
			<type>0</type>
			<appId>EXAMPLE</appId>
			<secret>EXAMPLE</secret>
		</facebook>
		<google>
			<type>1</type>
		</google>
	</social>

	<setup>
		<users>
			<user>
				<name>admin</name>
				<email>admin@EXAMPLE.com</email>
				<password>sfkueslifg</password>
				<language>en</language>
				<country>it</country>
				<timezone>Europe/Rome</timezone>
				<role>USER</role>
				<role>ADMIN</role>
			</user>
		</users>
	</setup>
	
	<security>
		<!-- Questo valore viene usato lato javascript per controllare se la sessione è scaduta -->
		<sessionTimeoutMinutes>240</sessionTimeoutMinutes><!-- ATTENZIONE: questo va tenuto allineato con web.xml altrimenti la sessione potrebbe non scadere mai -->
		<passwordLength min='5' max='128' />
		<encodePassword>false</encodePassword>
		<maxFailedAttempts>10</maxFailedAttempts>
		<failedAttemptsLockoutMinutes>10</failedAttemptsLockoutMinutes>
		<autologinExpirationHours>48</autologinExpirationHours>
		<roles>
			<!-- ATTENZIONE: l'ID e la KEY vanno stabiliti all'inizio e MAI PIU' CAMBIATI perchè vanno nel DB.
					Sono stati scelti valori non consecutivi per le ID in modo da poter eventualmente inserire valori in mezzo, 
					anche se ciò non ha effettivamente senso ma non si sa mai che si voglia un giorno ordinare in base all'ID. -->
			<role>
				<id>8</id>
				<key>ADMIN</key>
				<!-- ATTENZIONE: non usare name e description come fatti qui, ma metterli in messages.properties
				<name>Admin</name>
				<description>Gestione infrastruttura tecnica</description>
				 -->
			</role>
			<role>
				<id>2</id>
				<key>USER</key>
				<!-- 
				<name>Utente Verificato</name>
				<description>Utente la cui email è stata verificata</description>
				 -->
			</role>
		</roles>
	</security>
</config>