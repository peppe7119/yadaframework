plugins {
  id 'org.hidetake.ssh' version '2.7.0'
}

group = 'net.yadaframework'
version = '0.6'

apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'eclipse'
apply plugin: 'maven'

eclipse {
	jdt {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
		// https://stackoverflow.com/a/35302104/587641
		file {
      		File dir = file('.settings')
      		dir.mkdirs()
      		File f = file('.settings/org.eclipse.core.resources.prefs')
      		if (!f.exists()) {
      			f.write('eclipse.preferences.version=1\n')
      			f.append('encoding/<project>=utf-8')
      		}
    	}
	}
}

//// Dependencies needed to check the syntax of /YadaTools/src/main/resources/META-INF/template/java/*
//dependencies {
//	compile 'net.yadaframework:YadaCore:0.4'
//	compile 'org.springframework:spring-webmvc:4.2.5.RELEASE',
//    	'org.springframework:spring-context-support:4.2.5.RELEASE',
//    	'org.springframework.data:spring-data-jpa:1.9.4.RELEASE',
//		'org.springframework.social:spring-social-facebook:2.0.3.RELEASE',
//    	'org.springframework.security:spring-security-web:4.0.4.RELEASE',
//    	'org.springframework.security:spring-security-config:4.0.4.RELEASE'
//
//}

repositories {
	jcenter()
}

dependencies {
	compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final' 
}

/* TODO Da finire: lanciando da eclipse la console Ã¨ nulla. Vedi http://stackoverflow.com/a/24360969/587641 
        Usa il codice esistente per la richiesta conferma */
task terraforming {
	doLast {
	    def hostname, serverip, rootPassword;
	    def projectBasePath;
	    def console = System.console()
		hostname = console.readLine('> Please enter the non-qualified host name (e.g. saturn): ')
		serverip = console.readLine('> Please enter the server ip address: ')
		rootPassword = console.readLine('> Please enter the root password: ')
		projectBasePath = console.readLine('> Please enter the project base path (e.g. /srv/ldmprod: ')
		remotes.create('targetHost') {
		    host = serverip
		    user = root
		    password = rootPassword
		}
		ssh.run {
			session(remotes.targetHost) {
			  put from: "./scripts/defaultCourtesyPage", into: projectBasePath+"/contents"
			}
		}
		/* TODO finire caricando i file ed eseguendoli
			println "Running deploy script..."
			ssh.run {
				session(remotes.deployHost) {
					execute """sudo bash -O extglob -c 'sudo rm -rf ${tomcatbase}/webapps/ROOT/WEB-INF/!(lib)' &&
						sudo -u ${config.server.tomcatuser} unzip -o /$remoteDest/$filename -d ${tomcatbase}/webapps/ROOT &&
						/srv/${acroenv}/bin/restart.sh"""
				}
			}
			delete "$distsDir/$filename"
			println "Deploy of ${filename} done."
		} else {
			println "Aborted."
		}
		*/
	}
}

//artifacts {
//	archives file('build/libs/YadaTools.jar')
//}

//uploadArchives {
//	repositories {
//		flatDir {
//			dirs "C:/work/xtianRepository"
//		}
//	}
//}

// Per usare meglio maven vedi qui: http://stackoverflow.com/questions/24751996/gradle-configuration-to-download-custom-plugin-dependencies

uploadArchives {
	dependsOn build
	repositories {
		mavenLocal()
	}
}